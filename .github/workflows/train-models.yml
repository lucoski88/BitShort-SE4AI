# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Train Models

on:
  push:
    branches: [ "main" ]
    paths:
      - 'datasets/**'
      - '.github/workflows/train-models.yml'

jobs:
  train-models:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 1.8
      uses: actions/setup-java@v4
      with:
        java-version: '8'
        distribution: 'temurin'
        cache: maven
    - name: Maven Build Model
      run: mvn clean install -pl model -am

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'  # or any supported version

    - name: Install DVC
      run: pip install dvc

    - name: Dvc Extras
      run: pip install 'dvc[gdrive]'

    - name: Create Key
      run: echo '${{ secrets.GDRIVE_KEY }}' > gdrive_key.json

    - name: Dvc Pull
      run: dvc pull

    - name: Train Linear Regression Model
      run: mvn exec:java -pl model -Dexec.mainClass="model.LinearRegressionTrainer" -Dexec.args="datasets/regression_avgClose-close.csv"

    - name: Train Random Forest Regressor Model
      run: mvn exec:java -pl model -Dexec.mainClass="model.RandomForestRegressorTrainer" -Dexec.args="datasets/regression_avgClose-close.csv"